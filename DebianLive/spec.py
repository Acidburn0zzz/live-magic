from DebianLive.elements import FolderOfFiles
from DebianLive.elements import KeyVar

spec = {
    'chroot_hooks': (FolderOfFiles, 'chroot_local-hooks'),
    'binary_hooks': (FolderOfFiles, 'binary_local-hooks'),

    'binary': (KeyVar, {
        'LH_BINARY_FILESYSTEM': str,
        'LH_BINARY_IMAGES': list,
        'LH_BINARY_INDICES': bool,
        'LH_BOOTAPPEND_LIVE': str,
        'LH_BOOTAPPEND_INSTALL': str,
        'LH_BOOTLOADER': str,
        'LH_CHECKSUMS': bool,
        'LH_CHROOT_BUILD': bool,
        'LH_DEBIAN_INSTALLER': bool,
        'LH_DEBIAN_INSTALLER_DAILY': bool,
        'LH_ENCRYPTION': str,
        'LH_GRUB_SPLASH': str,
        'LH_HOSTNAME': str,
        'LH_ISO_APPLICATION': str,
        'LH_ISO_PREPARER': str,
        'LH_ISO_PUBLISHER': str,
        'LH_ISO_VOLUME': str,
        'LH_JFFS2_ERASEBLOCK': str,
        'LH_MEMTEST': str,
        'LH_NET_ROOT_FILESYSTEM': str,
        'LH_NET_ROOT_MOUNTOPTIONS': str,
        'LH_NET_ROOT_PATH': str,
        'LH_NET_ROOT_SERVER': str,
        'LH_NET_COW_FILESYSTEM': str,
        'LH_NET_COW_MOUNTOPTIONS': str,
        'LH_NET_COW_PATH': str,
        'LH_NET_COW_SERVER': str,
        'LH_NET_TARBALL': str,
        'LH_SYSLINUX_SPLASH': str,
        'LH_SYSLINUX_TIMEOUT': int,
        'LH_SYSLINUX_CFG': str,
        'LH_SYSLINUX_MENU': bool,
        'LH_SYSLINUX_MENU_LIVE_ENTRY': str,
        'LH_SYSLINUX_MENU_LIVE_FAILSAFE_ENTRY': str,
        'LH_SYSLINUX_MENU_MEMTEST_ENTRY': str,
        'LH_USERNAME': str,
    }),

    'bootstrap': (KeyVar, {
        'LH_ARCHITECTURE': str,
        'LH_BOOTSTRAP_CONFIG': str,
        'LH_BOOTSTRAP_INCLUDE': str,
        'LH_BOOTSTRAP_EXCLUDE': str,
        'LH_BOOTSTRAP_FLAVOUR': str,
        'LH_BOOTSTRAP_KEYRING': str,
        'LH_DISTRIBUTION': str,
        'LH_MIRROR_BOOTSTRAP': str,
        'LH_MIRROR_CHROOT': str,
        'LH_MIRROR_CHROOT_SECURITY': str,
        'LH_MIRROR_BINARY': str,
        'LH_MIRROR_BINARY_SECURITY': str,
        'LH_SECTIONS': list,
    }),

    'chroot': (KeyVar, {
        'LH_CHROOT_FILESYSTEM': str,
        'LH_UNION_FILESYSTEM': str,
        'LH_EXPOSED_ROOT': bool,
        'LH_HOOKS': list,
        'LH_INTERACTIVE': bool,
        'LH_KEYRING_PACKAGES': list,
        'LH_LANGUAGE': str,
        'LH_LINUX_FLAVOURS': list,
        'LH_LINUX_PACKAGES': list,
        'LH_PACKAGES': list,
        'LH_PACKAGES_LISTS': str,
        'LH_TASKS': str,
        'LH_SECURITY': bool,
        'LH_SYMLINKS': bool,
        'LH_SYSVINIT': bool,
    }),

    'common': (KeyVar, {
        'LH_APT': str,
        'LH_APT_FTP_PROXY': str,
        'LH_APT_HTTP_PROXY': str,
        'LH_APT_PDIFFS': bool,
        'LH_APT_PIPELINE': int,
        'LH_APT_RECOMMENDS': bool,
        'LH_APT_SECURE': bool,
        'LH_BOOTSTRAP': str,
        'LH_CACHE': bool,
        'LH_CACHE_INDICES': bool,
        'LH_CACHE_STAGES': list,
        'LH_DEBCONF_FRONTEND': str,
        'LH_DEBCONF_NOWARNINGS': bool,
        'LH_DEBCONF_PRIORITY': str,
        'LH_INITRAMFS': str,
        'LH_FDISK': str,
        'LH_LOSETUP': str,
        'LH_MODE': str,
        'LH_USE_FAKEROOT': str,
        'LH_TASKSEL': str,
        'LH_INCLUDES': str,
        'LH_TEMPLATES': str,

        'LH_BREAKPOINTS': bool,
        'LH_DEBUG': bool,
        'LH_FORCE': bool,
        'LH_VERBOSE': bool,
        'LH_QUIET': bool,
    }),

   'source': (KeyVar, {
       'LH_SOURCE': bool,
       'LH_SOURCE_IMAGES': list,
    }),
}
