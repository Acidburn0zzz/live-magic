#!/usr/bin/env python

import pygtk
pygtk.require('2.0')
import gtk
import gtk.glade
import os.path
import sys

from LiveMagic import models, views, controllers

class Model(object):
    def __init__(self, dir=None):
        self.config = models.LiveHelperConfiguration(dir)
    def __getattr__(self, k):
        return getattr(self.config, k)
    def __setattr__(self, k, v):
        self.__dict__[k] = v

class View(views.MainView, views.BuildView, views.HooksView, views.WizardView):
    def __init__(self, controller):
        self.controller = controller
        self.xml = gtk.glade.XML(glade_filename())

        views.MainView.__init__(self)
        views.BuildView.__init__(self)
        views.HooksView.__init__(self)
        views.WizardView.__init__(self)

        self.xml.signal_autoconnect(self.controller)

class Controller(controllers.MainController,
                    controllers.BuildController,
                    controllers.HooksController,
                    controllers.WizardController):
    def __init__(self, model, args):
        self.model = model
        controllers.MainController.__init__(self, args)
        controllers.BuildController.__init__(self)
        controllers.HooksController.__init__(self)
        controllers.WizardController.__init__(self)

def glade_filename():
    suffix = 'main.glade'

    local = os.path.join('glade', suffix)
    if os.path.isfile(local):
        return local

    for path in ['/usr/share/live-magic']:
        path = os.path.join(path, suffix)
        if os.path.isfile(path):
            return path

if __name__ == "__main__":
    m = Model()
    c = Controller(m, sys.argv[1:])
    v = View(c)
    c.ready()

    gtk.main()
