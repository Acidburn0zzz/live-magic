live-magic TODO
===============

General

 * Fix about box close dialog problem.

Build/build window

 * Interactive build - either support it (how?) or flag a warning if it is enabled.
   -- Debconf 'NONINTERACTIVE'

 * Use lh_build error code, both for status of build and status of password entry.

 * Make ProgressBar full-width when finished.

 * Choose distribution to build. Add notice re. broken testing/unstable builds.

Wizard

 * Don't create config dir until end of wizard.

 * After successful build, purge cache etc. and open

 * Add simple package handling to wizard.

 * Remove maximise option.

 * Find mirror "automatically". There are some debian-devel list posts about why
   this is bad and/or infeasible, but it would be preferably to an empty box.

 * Pressing 'ENTER' on fields moves to next page.

 * Only ask architecture question on amd64?

Expert mode

 * File selectors (preseed, splash screen)  (gtk.Entry with 'Select' button)

 * Tasks - task list sufficiently static? Probably needs its own page?

 * Dependencies between options. For example, it doesn't make sense
   to display the LH_ISO_AUTHOR etc if the ISO binary type is not
   selected.

   depends = [
       'common/LH_ISO_APPLICATION': lambda: 'iso' in self.model.binary.LH_BINARY_IMAGES,
       'common/LH_GRUB_SPLASH': lambda: self.model.binary.LH_BOOTLOADER == 'grub',
   ]

   "Hidden" depends - eg. LH_BOOTSTRAP_KEYRING only makes sense when using
   debootstrap (cdebootstrap does not have this option afaict).


API

 * Add build() to LiveHelperConfiguration?

     Would allow saner build scripts:

     #!/usr/bin/env python
     import os
     import livehelper
     lh = livehelper.Configuration()
     lh.binary.LH_BINARY_IMAGES = ['iso', 'usb-hdd', 'net']
     for pkg_list in ['gnome', 'kde', 'standard', 'rescue']:
         lh.common.LH_PACKAGES_LISTS = pkg_list
         result = lh.build(save=True)
         print type(result), result

     # Would need some way of saving logs.
     # Reliable method of getting locations of resulting ISOs.
